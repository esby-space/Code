# -*- coding: utf-8 -*-
"""
NeoMicroscope_T2.py - Testscript to connect Neopixel ring light via serial 
                      connection

Created on Thu Feb  3 15:36:56 2022

@author: Markus Testorf
"""





import time
from   pySerialTransfer import pySerialTransfer as txfer


if __name__ == '__main__':
    try:
        link = txfer.SerialTransfer('COM3')
        
        link.open()
        time.sleep(2) # allow some time for the Arduino to completely reset
    
        ii = 0
        while True:
            
            # create test data
            ii = (ii+1)%10
            npix   = ii
            cRed   = ii+1
            cGreen = ii-1
            cBlue  = 2*ii
            
            ###################################################################
            # Send a list
            ###################################################################
            link.txBuff[0] = npix
            link.txBuff[1] = cRed
            link.txBuff[2] = cGreen
            link.txBuff[3] = cBlue
    
            link.send(4)            
            
            
            ###################################################################
            # Wait for a response and report any errors while receiving packets
            ###################################################################
            while not link.available():
                if link.status < 0:
                    if link.status == txfer.CRC_ERROR:
                        print('ERROR: CRC_ERROR')
                    elif link.status == txfer.PAYLOAD_ERROR:
                        print('ERROR: PAYLOAD_ERROR')
                    elif link.status == txfer.STOP_BYTE_ERROR:
                        print('ERROR: STOP_BYTE_ERROR')
                    else:
                        print('ERROR: {}'.format(link.status))
            
            ###################################################################
            # Parse response list
            ###################################################################
            rxLed   = link.rxBuff[0]
            rxRed   = link.rxBuff[1]
            rxGreen = link.rxBuff[2]
            rxBlue  = link.rxBuff[3]
    
            ###################################################################
            # Display the received data
            ###################################################################
            print('SENT: ', npix, cRed, cGreen, cBlue)
            print('RCVD: ', rxLed, rxRed, rxGreen, rxBlue)
            print(' ')

            time.sleep(2)

    except KeyboardInterrupt:
        try:
            link.close()
        except:
            pass
    
    except:
        import traceback
        traceback.print_exc()
        
        try:
            link.close()
        except:
            pass

