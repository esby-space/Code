#include "DEV_Config.hpp"
#include "TCS34725.hpp"
#include "SerialTransfer.h"

const int RED = 10;
const int GREEN = 11;
const int BLUE = 12;

const int DISPLAY_RED = 3;
const int DISPLAY_GREEN = 5;
const int DISPLAY_BLUE = 6;

SerialTransfer trans;

void setup()
{
    initSensor();
    trans.begin(Serial);

    pinMode(RED, OUTPUT);
    pinMode(GREEN, OUTPUT);
    pinMode(BLUE, OUTPUT);

    pinMode(DISPLAY_RED, OUTPUT);
    pinMode(DISPLAY_GREEN, OUTPUT);
    pinMode(DISPLAY_BLUE, OUTPUT);
}

void initSensor()
{
    Config_Init();
    if (TCS34725_Init() != 0)
    {
        Serial.print("TCS34725 initialization error!!\r\n");
    }

    Serial.print("TCS34725 initialization success!!\r\n");
}

RGB rgb, RGB888;
void loop()
{
    rgb = TCS34725_Get_RGBData();
    RGB888 = TCS34725_GetRGB888(rgb);
    sendData(RGB888);

    printSensor(RGB888);
    displayLED(RGB888);
    changeColor();

    delay(100);
}

int incomingByte = 0;
void changeColor()
{
    if (Serial.available() == 0)
        return;

    incomingByte = Serial.read();
    if (incomingByte == 114)
    {
        // r -> red
        digitalWrite(RED, HIGH);
        digitalWrite(GREEN, LOW);
        digitalWrite(BLUE, LOW);
        Serial.println("changing color to red");
    }
    else if (incomingByte == 103)
    {
        // g -> green
        digitalWrite(RED, LOW);
        digitalWrite(GREEN, HIGH);
        digitalWrite(BLUE, LOW);
        Serial.println("changing color to green");
    }
    else if (incomingByte == 98)
    {
        // b -> blue
        digitalWrite(RED, LOW);
        digitalWrite(GREEN, LOW);
        digitalWrite(BLUE, HIGH);
        Serial.println("changing color to blue");
    }
}

void printSensor(RGB rgb)
{
    Serial.print("R: ");
    Serial.print(rgb.R);
    Serial.print(" | G: ");
    Serial.print(rgb.G);
    Serial.print(" | B: ");
    Serial.print(rgb.B);
    Serial.print("\r\n");
}

void displayLED(RGB rgb)
{
    analogWrite(DISPLAY_RED, rgb.R);
    analogWrite(DISPLAY_GREEN, rgb.G);
    analogWrite(DISPLAY_BLUE, rgb.B);
}

void sendData(RGB rgb)
{
    u16 arr[] = {rgb.R, rgb.G, rgb.B};
    trans.sendDatum(arr);
}
